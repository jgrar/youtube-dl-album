#!/bin/sh

PROGRAM_NAME="$(basename $0)"
OFS="${OFS:-,}"

usage() {
	printf "Usage: %s URL FMT\n" $PROGRAM_NAME
}

dl_album() {
	eval "$(youtube-dl -x --write-description $YOUTUBEDL_ARGS "$1" | tee /dev/tty | (

		while read line
		do
			if [ ! "$HAVE_DESC" ]
			then
				tmp="$(printf "%s\n" "$line" | sed -n "s/\[info\] Writing video description to: //p")"
				if [ "$tmp" ]
				then
					printf 'desc="%s" ' "$tmp"
					HAVE_DESC=1
				fi
			fi

			if [ ! "$HAVE_ALBUM" ]
			then
				tmp="$(printf "%s\n" "$line" | \
					sed -n -e "s/\[download\] Destination: //p" \
						-e "s/\[download\] \(.*\) has already been downloaded/\1/p"
				)"
				if [ "$tmp" ]
				then
					printf 'album="%s" ' "$tmp"
					HAVE_ALBUM=1
				fi
			fi
		done
	))"
}

time2sec() {
	m="${1%%:*}"
	s="${1##*:}"

	printf "%d" "$(((m * 60) + s))"
}

TRACK_RE='\\d+'
TITLE_RE='.*'
OFFSET_RE='\\d{1,2}:\\d{1,2}'

album_desc() {
	sfmt="$(printf "%s" "$1" | sed \
		-e 's/%n/(?<track>'"$TRACK_RE"')/' \
		-e 's/%t/(?<title>'"$TITLE_RE"')/' \
		-e 's/%o/(?<offset>'"$OFFSET_RE"')/'
	)"

	perl -lne \
		'if (/'"$sfmt"'/) {
			print "track=\"$+{track}\" title=\"$+{title}\" offset=\"$+{offset}\"";
		}' "$2" | \
	(
		n=0
		curr_offset=0
		prev_offset=

		while read line
		do
			eval "$line"

			if [ -z "$title" -o -z "$offset" ]
			then
				printf "No title or offset field, cannot continue\n"
				exit 1
			fi

			offset="$(time2sec "$offset")"
			n=$((n+1))

			if [ ! "$CALC_OFFSET" -a ! -z "$prev_offset" ]
			then
				printf "%d$OFS%d\n" "$prev_offset" "$((offset - prev_offset))"
			fi

			printf "%d$OFS%s$OFS" "${track:-$n}" "$title"

			if [ "$CALC_OFFSET" ]
			then
				duration="$offset"
				offset="$curr_offset"

				printf "%d$OFS%d\n" "$offset" "$duration"

				curr_offset=$((curr_offset + duration))
			else
				prev_offset="$offset"
			fi
		done

		if [ ! "$CALC_OFFSET" -a ! -z "$prev_offset" ]
		then
			printf "%d${OFS}%s\n" "$prev_offset" \
				"$(printf "%s - %d\n" "$total_duration" "$prev_offset" | bc)"
		fi
	) | tee /dev/tty
}

split_tracks() {
	while IFS="$OFS" read track title offset duration
	do
		dest="$(printf "%02d-%s.%s" "$track" "$title" "$ext")"
		echo | ffmpeg -hide_banner -i "$album" -ss "$offset"  \
			-acodec copy -t "$duration" "$dest"
	done
}

if [ $# -lt 2 ]
then
	usage
	exit 1
fi

if [ $# -eq 3 ]
then
	desc="$3"
	HAVE_DESC=1
fi

dl_album "$1"

if [ ! "$album" -o ! -f "$album" ]
then
	printf "Failed to retrieve album\n"
	exit 1
fi

if [ ! "$desc" -o ! -f "$desc" ]
then
	printf "Failed to retrieve description\n"
	exit 1
fi

ext="${album##*.}"

duration=$(ffprobe -v quiet -show_entries format=duration -of csv=p=0 "$album")

album_desc "$2" "$desc" "$duration" | split_tracks

# TODO 
# 	* tag split tracks
